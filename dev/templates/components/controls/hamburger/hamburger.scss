@use "sass:math";

@import "dev/scss/helpers/variables";
@import "dev/scss/helpers/mixins";

$hamburger-hover-use-filter: false;
$hamburger-hover-opacity: none;
$hamburger-padding-x: 10px;
$hamburger-padding-y: 10px;


.hamburger {
  display: inline-block;
  cursor: pointer;

  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
    }
  }

  &.is-active {
    &:hover {
      @if $hamburger-hover-use-filter == true {
        filter: none;
      }
      @else {
        opacity: none;
      }
    }

    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: $color-blue;
    }
  }
}

.hamburger-box {
  width: 16px;
  height: 2px * 3 + 5px * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: math.div(2px, -2);

  &,
  &::before,
  &::after {
    width: 16px;
    height: 2px;
    background-color: $color-white;
    border-radius: 0px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: (5px + 2px) * -1;
  }

  &::after {
    bottom: (5px + 2px) * -1;
  }
}

.hamburger_default {
  background: $color-blue;
  margin: auto 0;
  border-radius: $radius-secondary;
  height: 36px;
  padding: 10px;

  .hamburger-inner {
    top: auto;
    bottom: 0;
    transition-duration: 0.13s;
    transition-delay: 0.13s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::after {
      top: (5px * 2 + 2px * 2) * -1;
      transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
                  opacity 0.1s linear;
    }

    &::before {
      transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
                  transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.is-active {
    .hamburger-inner {
      transform: translate3d(0, (5px + 2px) * -1, 0) rotate(-45deg);
      transition-delay: 0.22s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      background: $color-white;

      &::after {
        top: 0;
        opacity: 0;
        transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
                    opacity 0.1s 0.22s linear;
      }

      &::before {
        top: 0;
        transform: rotate(-90deg);
        transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
                    transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
        background: $color-white;
      }
    }
  }
}

.c-wrapper__hamburger {
	height: 100%;
	width: 100%;
	display: flex;
  padding-left: 9px;
}

/**
* Md
*/

@media (min-width: $bp-md) {
  .c-wrapper__hamburger {
    padding: 0 18px;
  }

  .c-wrapper__hamburger_style_primary {
    border-right: 1px solid $color-light_gray;
  }

  .hamburger_default {
    background: $color-white;
    height: 25px;
    padding: 5px 2px;

    .hamburger-inner {
      border-radius: 50px;
      &,
      &::before,
      &::after {
        width: 20px;
        background-color: $color-blue;
        border-radius: 50px;
      }
    
      &::before {
        top: (5px + 2px) * -1;
      }
    
      &::after {
        bottom: (5px + 2px) * -1;
      }
    }

    &.is-active {
      .hamburger-inner {
        background: $color-blue;

  
        &::before {
          background: $color-blue;
        }
      }
    }
  }

  .hamburger-box {
    width: 20px;
    height: 2px * 3 + 5px * 2;

    .hamburger-inner {
  
      &::after {
        top: (5px * 2 + 2px * 2) * -1;
      }
    }

    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: $color-blue;
    }
  }
}

